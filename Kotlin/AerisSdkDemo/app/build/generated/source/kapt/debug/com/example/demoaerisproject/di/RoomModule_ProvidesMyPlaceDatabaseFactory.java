// Generated by Dagger (https://dagger.dev).
package com.example.demoaerisproject.di;

import android.content.Context;
import com.example.demoaerisproject.data.room.MyPlaceDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvidesMyPlaceDatabaseFactory implements Factory<MyPlaceDatabase> {
  private final Provider<Context> appContextProvider;

  public RoomModule_ProvidesMyPlaceDatabaseFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public MyPlaceDatabase get() {
    return providesMyPlaceDatabase(appContextProvider.get());
  }

  public static RoomModule_ProvidesMyPlaceDatabaseFactory create(
      Provider<Context> appContextProvider) {
    return new RoomModule_ProvidesMyPlaceDatabaseFactory(appContextProvider);
  }

  public static MyPlaceDatabase providesMyPlaceDatabase(Context appContext) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.providesMyPlaceDatabase(appContext));
  }
}
