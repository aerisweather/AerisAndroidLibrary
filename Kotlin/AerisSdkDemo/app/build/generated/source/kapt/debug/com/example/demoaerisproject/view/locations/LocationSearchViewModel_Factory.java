// Generated by Dagger (https://dagger.dev).
package com.example.demoaerisproject.view.locations;

import com.example.demoaerisproject.data.location.LocationRepository;
import com.example.demoaerisproject.data.room.MyPlaceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationSearchViewModel_Factory implements Factory<LocationSearchViewModel> {
  private final Provider<LocationRepository> locationRepositoryProvider;

  private final Provider<MyPlaceRepository> myPlaceRepositoryProvider;

  public LocationSearchViewModel_Factory(Provider<LocationRepository> locationRepositoryProvider,
      Provider<MyPlaceRepository> myPlaceRepositoryProvider) {
    this.locationRepositoryProvider = locationRepositoryProvider;
    this.myPlaceRepositoryProvider = myPlaceRepositoryProvider;
  }

  @Override
  public LocationSearchViewModel get() {
    return newInstance(locationRepositoryProvider.get(), myPlaceRepositoryProvider.get());
  }

  public static LocationSearchViewModel_Factory create(
      Provider<LocationRepository> locationRepositoryProvider,
      Provider<MyPlaceRepository> myPlaceRepositoryProvider) {
    return new LocationSearchViewModel_Factory(locationRepositoryProvider, myPlaceRepositoryProvider);
  }

  public static LocationSearchViewModel newInstance(LocationRepository locationRepository,
      MyPlaceRepository myPlaceRepository) {
    return new LocationSearchViewModel(locationRepository, myPlaceRepository);
  }
}
