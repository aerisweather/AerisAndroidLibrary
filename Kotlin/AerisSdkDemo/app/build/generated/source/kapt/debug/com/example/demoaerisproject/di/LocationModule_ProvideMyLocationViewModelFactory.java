// Generated by Dagger (https://dagger.dev).
package com.example.demoaerisproject.di;

import com.example.demoaerisproject.data.room.MyPlaceRepository;
import com.example.demoaerisproject.view.locations.MyLocationViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationModule_ProvideMyLocationViewModelFactory implements Factory<MyLocationViewModel> {
  private final Provider<MyPlaceRepository> myPlaceRepositoryProvider;

  public LocationModule_ProvideMyLocationViewModelFactory(
      Provider<MyPlaceRepository> myPlaceRepositoryProvider) {
    this.myPlaceRepositoryProvider = myPlaceRepositoryProvider;
  }

  @Override
  public MyLocationViewModel get() {
    return provideMyLocationViewModel(myPlaceRepositoryProvider.get());
  }

  public static LocationModule_ProvideMyLocationViewModelFactory create(
      Provider<MyPlaceRepository> myPlaceRepositoryProvider) {
    return new LocationModule_ProvideMyLocationViewModelFactory(myPlaceRepositoryProvider);
  }

  public static MyLocationViewModel provideMyLocationViewModel(
      MyPlaceRepository myPlaceRepository) {
    return Preconditions.checkNotNullFromProvides(LocationModule.INSTANCE.provideMyLocationViewModel(myPlaceRepository));
  }
}
